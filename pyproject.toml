[tool.poetry]
name = "smit"
version = "0.4.0"
description = "Scrape and plot energy usage data."
authors = ["Christian Koplenig <tmpck@gmx.net>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/ChristianKoplenig/SMIT"
documentation = "https://filedn.eu/liu4e7QL6NoXLInqRT2UAQu/SMIT/index.html"
packages = [
    { include = "api", from = "src" },
    { include = "database", from = "src" },
    { include = "exceptions", from = "src" },
    { include = "schemas", from = "src" },
    { include = "utils", from = "src" },
]

# Code checks, linting...
[tool.pyright]
pythonVersion = "3.11"
include = ["src"]
exclude = ["**/__pycache__", ".pytest_cache", ".tox", ".venv", ".dummy", "/opt"]

[tool.ruff.lint]
select = ["E", "F"]

# Dependencies
[tool.poetry.dependencies]
python = "^3.11"
tomlkit = "^0.12.3"

[tool.poetry.group.pydantic.dependencies]
pydantic = { extras = ["email"], version = "^2.5.3" }
pydantic-settings = "^2.1.0"

[tool.poetry.group.database.dependencies]
sqlalchemy = "^2.0.24"
psycopg = { extras = ["binary", "pool"], version = "^3.1.16" }
sqlmodel = "^0.0.14"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.2"
tox = "^4.11.3"
tox-poetry-installer = "^1.0.0b1"
pytest-mock = "^3.12.0"
ruff = "^0.2.1"
httpx = "^0.27.0"
python-dotenv = "^1.0.1"
pytest-asyncio = "^0.23.5"

[tool.poetry.group.fastapi.dependencies]
fastapi = "^0.109.2"
uvicorn = { extras = ["standard"], version = "^0.27.0.post1" }
python-multipart = "^0.0.9"
python-jose = { extras = ["cryptography"], version = "^3.3.0" }

[tool.poetry.group.utils.dependencies]
argon2-cffi = "^23.1.0"

# Testing
[tool.pytest.ini_options]
addopts = "--ignore=opt/"
markers = [
    "smoke: Validate all core methods",
    "schemas: Test SqlModel schemas",
    "engine: Test database engine",
    "crud: Test CRUD operations, bypass FastAPI TestClient",
    "api: Test API endpoints using mocked TestClient",
    "production: Use testclient to access production database",
]

[tool.tox]
legacy_tox_ini = """
    [tox]
    minversion = 4.10.0
    envlist = py311, #flake8
    isolated_build = true

    [testenv]
    skip_install = true
    description = Use dummy setup to test SMIT application
    allowlist_externals = poetry
    require_locked_deps = true
    poetry_dep_groups = 
        dev
    commands_pre =
        poetry install
    commands =
        poetry run pytest --basetemp={envtmpdir} -v -m "engine" #combine markers with or/and syntax

    [testenv:flake8]
    basepython = python3.11
    deps = flake8
    commands = flake8 --ignore=E201,E202,E203,E221,E222,E241 src
"""
# Build
[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
